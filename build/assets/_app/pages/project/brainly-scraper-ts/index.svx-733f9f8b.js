import{S as e,i as r,s as t,m as a,p as s,q as o,r as i,u as n,w as h,x as l,y as c,v as u,e as p,t as y,j as f,c as d,a as g,b as m,d as b,l as v,o as w,f as q,g as $}from"../../../chunks/stores-bccdb558.js";import{P as I}from"../../../chunks/project-50086ca8.js";import"../../../chunks/ProgressButton-a8e9a313.js";import"../../../chunks/Chrome-a9500c65.js";function j(e){let r,t,a,s,o,i,n,h,l,c,u,I,j,T,k,E,P,B,G;return{c(){r=p("p"),t=p("strong"),a=y("Brainly Scraper"),s=y(" is a tiny (~2KB) library that I made for "),o=p("a"),i=y("my whatsapp bot"),n=y(" which is now dead. I made this just for fun and learn Typescript."),h=f(),l=p("p"),c=y("After creating this library, I learned some stuff about HTTP request like headers which allow me to get the data from brainly. If the header isn’t present then my request would get rejected."),u=f(),I=p("p"),j=y("I also learned that you can query into GraphQL server using "),T=p("code"),k=y("query"),E=y(" object on the request body. I thought you can only get a request from a GraphQL server using GraphQL client like Apollo, urql, and Relay."),P=f(),B=p("p"),G=y("This library might be buggy. I never found an error though, if you’re interested with this library then feel free to give it a try."),this.h()},l(e){r=d(e,"P",{});var p=g(r);t=d(p,"STRONG",{});var y=g(t);a=m(y,"Brainly Scraper"),y.forEach(b),s=m(p," is a tiny (~2KB) library that I made for "),o=d(p,"A",{href:!0,rel:!0});var f=g(o);i=m(f,"my whatsapp bot"),f.forEach(b),n=m(p," which is now dead. I made this just for fun and learn Typescript."),p.forEach(b),h=v(e),l=d(e,"P",{});var w=g(l);c=m(w,"After creating this library, I learned some stuff about HTTP request like headers which allow me to get the data from brainly. If the header isn’t present then my request would get rejected."),w.forEach(b),u=v(e),I=d(e,"P",{});var q=g(I);j=m(q,"I also learned that you can query into GraphQL server using "),T=d(q,"CODE",{});var $=g(T);k=m($,"query"),$.forEach(b),E=m(q," object on the request body. I thought you can only get a request from a GraphQL server using GraphQL client like Apollo, urql, and Relay."),q.forEach(b),P=v(e),B=d(e,"P",{});var x=g(B);G=m(x,"This library might be buggy. I never found an error though, if you’re interested with this library then feel free to give it a try."),x.forEach(b),this.h()},h(){w(o,"href","https://github.com/elianiva/img-to-sticker-bot"),w(o,"rel","nofollow")},m(e,p){q(e,r,p),$(r,t),$(t,a),$(r,s),$(r,o),$(o,i),$(r,n),q(e,h,p),q(e,l,p),$(l,c),q(e,u,p),q(e,I,p),$(I,j),$(I,T),$(T,k),$(I,E),q(e,P,p),q(e,B,p),$(B,G)},d(e){e&&b(r),e&&b(h),e&&b(l),e&&b(u),e&&b(I),e&&b(P),e&&b(B)}}}function T(e){let r,t;const p=[k];let y={$$slots:{default:[j]},$$scope:{ctx:e}};for(let s=0;s<p.length;s+=1)y=a(y,p[s]);return r=new I({props:y}),{c(){s(r.$$.fragment)},l(e){o(r.$$.fragment,e)},m(e,a){i(r,e,a),t=!0},p(e,[t]){const a=0&t?n(p,[u(k)]):{};1&t&&(a.$$scope={dirty:t,ctx:e}),r.$set(a)},i(e){t||(h(r.$$.fragment,e),t=!0)},o(e){l(r.$$.fragment,e),t=!1},d(e){c(r,e)}}}const k={title:"Brainly Scraper",date:"2020-09-12T00:00:00.000Z",desc:"A tiny (~2KB) library to scrape data from brainly written in Typescript.",demo:!1,source:"https://github.com/elianiva/brainly-scraper-ts",layout:"project",stack:[["Typescript","https://typescriptlang.org"]]};export default class extends e{constructor(e){super(),r(this,e,null,T,t,{})}}export{k as metadata};
